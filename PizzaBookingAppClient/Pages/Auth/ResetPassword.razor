@page "/reset-password"
<PageTitle>Reset password</PageTitle>

<MudGrid Class="d-flex align-center justify-center">

    <MudItem xs="10" sm="8" md="6" lg="5" Class="d-flex align-center justify-center flex-wrap mt-8">

        <MudPaper Class="pa-8 d-flex justify-center flex-wrap"
                  Style="background: var(--mud-palette-secondary); width: 100%;">
            @if (ShowGuide)
            {
                @* After provide email address *@
                <MudText Typo="Typo.h5" Color="Color.Primary" Class="pa-4">
                    Active new password
                </MudText>

                <MudText Typo="Typo.body1" Color="Color.Primary" Class="pa-4">
                    We just have sent the active link and new password to you email.
                    Open your email and click to the active link to active
                    new password.
                </MudText>

                <MudItem Style="width: 100%; text-align: right;">
                    <MudButton OnClick="@(()=> _navigationManager.NavigateTo("/login"))"
                               Class="mt-8"
                               Variant="Variant.Filled"
                               EndIcon="@Icons.Material.Filled.Login"
                               Color="Color.Success">Login now</MudButton>
                </MudItem>
               
            }
            else
            {
                <MudText Typo="Typo.h5"
                         Align="Align.Center"
                         Color="Color.Primary">Reset your password</MudText>

                <MudText Typo="Typo.caption"
                         Class="pa-4"
                         Align="Align.Center"
                         Color="Color.Primary">
                    We're going to send you new password via your email.
                    So, please provide us your email.
                </MudText>

                <EditForm Model="model" OnValidSubmit="OnResetPasssword"
                    style="width: 100%;">

                    <DataAnnotationsValidator/>

                    <MudTextField @bind-Value="@model.Email"
                                  For="@(()=> model.Email)"
                                  Class="mt-8"
                                  FullWidth=true
                                  Label="Email"
                                  Variant="Variant.Text"
                                  HelperText="Email you register account" />

                    <MudButton ButtonType="ButtonType.Submit"
                               Class="mt-8"
                               Variant="Variant.Filled"
                               FullWidth=true
                               EndIcon="@Icons.Material.Filled.Send"
                               Disabled="isProcessResetPasssword"
                               Color="Color.Success">
                        @if (isProcessResetPasssword)
                        {
                            <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                            <MudText Class="ms-2" Color="Color.Success">Processing</MudText>
                        }
                        else
                        {
                            <MudText> Continue </MudText>
                        }
                    </MudButton>

                </EditForm>


                <MudDivider Class="my-4"
                            Style="background: var(--mud-palette-primary); width: 80%; height: 0.5px;" />

                <MudItem Style="width: 100%; text-align: center;">
                    <MudLink Href="/login"
                             Typo="Typo.caption">
                        Back to login
                    </MudLink>
                </MudItem>
            }

         </MudPaper>

    </MudItem>

</MudGrid>

@code {
    private ResetPasswordViewModel model = new();
    private bool ShowGuide = false;

    private bool isProcessResetPasssword = false;
    private async Task OnResetPasssword()
    {
        if (isProcessResetPasssword)
        {
            return;
        }

        try
        {
            Console.WriteLine("OnResetPasssword enter");
            isProcessResetPasssword = true;
            await _httpService.Create<ResetPasswordViewModel>("/User/ResetPassword", model);
            ShowGuide = true;
        }
        catch (AppException ex)
        {
            _snackbar.Add(ex.Message, Severity.Error);
        }
        finally
        {
            isProcessResetPasssword = false;
            Console.WriteLine("OnResetPasssword done");
            StateHasChanged();
        }
    }
}
