@layout MainLayout

@page "/login"

<MudGrid Class="d-flex align-center justify-center">
    <MudItem xs="12" md="8">
        <MudPaper Class="d-flex align-center justify-center mud-width-full mt-8 pa-4"
                  Style="background: var(--mud-palette-secondary)">

            <MudGrid>

                <MudItem xs="12" sm="6" Class="d-flex align-center">
                    <MudImage Src="/public/images/banner1.jpg"
                              Fluid="true" />
                </MudItem>


                <MudItem xs="12" sm="6" Class="d-flex align-center justify-center flex-wrap">
                    <EditForm Model="model" OnValidSubmit="OnLogin" style="width: 100%;">

                        <DataAnnotationsValidator />
                        
                        <MudText Typo="Typo.h4"
                                 Align="Align.Center"
                                 Color="Color.Primary">Login now!</MudText>

                        <MudTextField 
                            @bind-Value="@model.LoginName"
                            For="@(() => model.LoginName)"
                            Class="mt-8"
                            FullWidth=true
                            Label="Email"
                            Variant="Variant.Text" />

                        <MudTextField 
                            @bind-Value="@model.Password"
                            For="@(() => model.Password)"
                            Class="mt-8"
                            FullWidth=true
                            HelperText="8 characters"
                            AdornmentColor="Color.Success"
                            InputType="@(ShowPassword? InputType.Text: InputType.Password)"
                            Label="Password"
                            Variant="Variant.Text" />

                        <MudItem Class="d-flex justify-space-between align-center w-100">

                            <MudCheckBox @bind-Checked="@ShowPassword" Size="Size.Small" Color="Color.Primary"
                            Class="ms-n4">
                                <MudText Typo="Typo.caption" Color="Color.Primary">
                                    Show password
                                </MudText>
                            </MudCheckBox>  

                            <MudLink Href="/reset-password"
                                     Typo="Typo.caption">
                                Forget password?
                            </MudLink>
                                
                        </MudItem>

                        <MudButton
                            ButtonType="ButtonType.Submit"
                            Class="mt-8"
                            Variant="Variant.Filled"
                            FullWidth=true
                            Color="Color.Error">Login now!</MudButton>

                    </EditForm>

                    <MudDivider Class="my-4"
                                Style="background: var(--mud-palette-primary); width: 80%; height: 0.5px;" />

                    <MudLink 
                        Href="/register"
                        Typo="Typo.caption">
                        Don't have an account? Register now!
                    </MudLink>
                </MudItem>

            </MudGrid>
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    private LoginViewModel model = new();
    private bool ShowPassword { get; set; } = false;

    private bool isOnLoginProcess = false;
    private async Task OnLogin()
    {
        if (isOnLoginProcess)
        {
            return;
        }

        isOnLoginProcess = true;

        try
        {
            TokenPairRespone token = await _authService.LoginAsync(model);
            _snackbar.Add("Loged in successfully!", Severity.Success);
            string role = await _authService.GetClaimValue("role");
            if (role.Equals("admin"))
            {
                _navigationManager.NavigateTo("/admin");
            }
            else
            {
                _navigationManager.NavigateTo("/"); 
            }
        }
        catch (AppException ex)
        {
            Console.WriteLine("AppException:" + ex.Message);
            _snackbar.Add(ex.Message, Severity.Error);
        }
        finally
        {
            isOnLoginProcess = false;   
        }
    }
}
