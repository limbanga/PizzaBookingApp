@page "/admin/customer"

<PageTitle>Admin - Customer</PageTitle>
<MudText Typo="Typo.h3" GutterBottom="true" Color="Color.Primary"> Customer </MudText>

<MudTable Items="orders"
          SortLabel="Sort By" Elevation="0"
          T="User"
          Dense="@dense" Hover="@hover"
          Bordered="@bordered" Striped="@striped"
          Filter="new Func<User,bool>(FilterFunc1)">

    <ToolBarContent>
        <MudText Typo="Typo.h6">Customer</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="searchString"
                      Placeholder="Search" Adornment="Adornment.Start"
                      AdornmentIcon="@Icons.Material.Filled.Search"
                      IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>

    <HeaderContent>

        <MudTh>
            <MudTableSortLabel SortBy="new Func<User, object>(x=> x.FirstName)"
                               Style="color: var(--mud-palette-text-secondary);">
                First name
            </MudTableSortLabel>
        </MudTh>

        <MudTh>
            <MudTableSortLabel SortBy="new Func<User, object>(x=> x.LastName)"
                               Style="color: var(--mud-palette-text-secondary);">
                Last name
            </MudTableSortLabel>
        </MudTh>

        <MudTh>
            <MudTableSortLabel SortBy="new Func<User, object>(x=>x.PhoneNumber)"
                               Style="color: var(--mud-palette-text-secondary);">
                PhoneNumber
            </MudTableSortLabel>
        </MudTh>

        <MudTh>
            <MudTableSortLabel SortBy="new Func<User, object>(x=>x.CreatedAt.ToLocalTime())"
                               Style="color: var(--mud-palette-text-secondary);">
                CreatedAt
            </MudTableSortLabel>
        </MudTh>

        <MudTh>
            <MudTableSortLabel InitialDirection="SortDirection.Descending"
                               SortBy="new Func<User, object>(x=>x.UpdatedAt.ToLocalTime())"
                               Style="color: var(--mud-palette-text-secondary);">
                UpdatedAt
            </MudTableSortLabel>
        </MudTh>

    </HeaderContent>

    <RowTemplate>

        <MudTd DataLabel="FirstName">
            @context.FirstName
        </MudTd>

        <MudTd DataLabel="LastName">
            @context.LastName
        </MudTd>

        <MudTd DataLabel="PhoneNumber">
            @context.PhoneNumber
        </MudTd>

        <MudTd DataLabel="CreatedAt">
            @context.CreatedAt
        </MudTd>

        <MudTd DataLabel="UpdatedAt">
            @context.UpdatedAt
        </MudTd>

    </RowTemplate>

    <PagerContent>
        <MudTablePager PageSizeOptions="new int[]{ 10, 20, 50, 100}" />
    </PagerContent>

</MudTable>


@code {

    private bool dense = false;
    private bool hover = true;
    private bool striped = false;
    private bool bordered = false;

    private string searchString = string.Empty;
    private List<User>? orders;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private bool FilterFunc1(User category)
    {
        return FilterFunc(category, searchString);
    }

    private bool FilterFunc(User element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.PhoneNumber.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.FirstName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }

    private async Task LoadData()
    {
        try
        {
            orders = await _httpService.Get<List<User>>("/User/GetAll");
            StateHasChanged();
        }
        catch (Exception ex)
        {
            _snackbar.Add(ex.Message, Severity.Error);
        }
    }
}
