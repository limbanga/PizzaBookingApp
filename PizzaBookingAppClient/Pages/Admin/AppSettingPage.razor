@page "/admin/app-setting"

<PageTitle>Admin - App Setting</PageTitle>
<MudText Typo="Typo.h3" GutterBottom="true" Color="Color.Primary"> App Setting </MudText>

<MudPaper>
	<MudList Clickable="true">

		<MudListItem>
			<MudCheckBox @bind-Checked="@AdminLayout.setting.AllowAnonymousLogin"
						 Color="Color.Primary">
				Allow anoymous login
			</MudCheckBox>
		</MudListItem>
		<MudDivider />

		<MudListItem>
			<MudCheckBox @bind-Checked="@AdminLayout.setting.Dense" Color="Color.Primary">
				Dense
			</MudCheckBox>
		</MudListItem>
		<MudDivider />

		<MudListItem>
			<MudCheckBox @bind-Checked="@AdminLayout.setting.Hover" Color="Color.Primary">
				Hover
			</MudCheckBox>
		</MudListItem>
		<MudDivider />

		<MudListItem>
			<MudCheckBox @bind-Checked="@AdminLayout.setting.Striped" Color="Color.Primary">
				Striped
			</MudCheckBox>
		</MudListItem>
		<MudDivider />

		<MudListItem>
			<MudCheckBox @bind-Checked="@AdminLayout.setting.Bordered" Color="Color.Primary">
				Bordered
			</MudCheckBox>
		</MudListItem>

	</MudList>
	<div class="d-flex justify-end pe-4 py-4">
		<MudButton OnClick="OnSaveChange"
				   Variant="Variant.Filled"
				   Color="Color.Success">
			Save Changes
		</MudButton>
	</div>
</MudPaper>

@code {
	[CascadingParameter]
	public AdminLayout AdminLayout { get; set; } = null!;

	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();

		await AdminLayout.LoadSetting();
	}

	private async Task OnSaveChange()
	{
		try
		{
			AdminLayout.setting = await _httpService.Update<AppSetting>("/App/Update", AdminLayout.setting);
			_snackbar.Add("Save change success.", Severity.Success);
		}
		catch (Exception)
		{
			throw;
		}
	}
}
