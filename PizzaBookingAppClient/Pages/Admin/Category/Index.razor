@page "/admin/category"
@using PizzaBookingShared.Entities
@using PizzaBookingAppClient.Shared

<PageTitle>Admin - Category</PageTitle>
<MudText Typo="Typo.h3" GutterBottom="true"> Category </MudText>

<MudItem Class="d-flex justify-end">
    <MudButton Variant="Variant.Filled" Href="/admin/category/create" Color="@Color.Success">Create now!</MudButton>
</MudItem>

@if (categories == null)
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
else if (categories.Count == 0)
{
    <MudText Typo="Typo.h4" GutterBottom="true">
        Category is empty.
        <MudLink Href="/admin/category/create">Create now!</MudLink>
    </MudText>
}
else
{
    <MudTable Items="categories" Hover="true" SortLabel="Sort By" Elevation="0" OnRowClick="RowClickEvent" T="Category">
        <HeaderContent>
            <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<Category, object>(x=>x.Name)">Name</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<Category, object>(x=>x.CreatedAt.ToLocalTime())">CreatedAt</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<Category, object>(x=>x.UpdatedAt.ToLocalTime())">UpdatedAt</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<Category, object>(x=>x.Count)">Count</MudTableSortLabel></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Name">@context.Name</MudTd>
            <MudTd DataLabel="CreatedAt">@context.CreatedAt</MudTd>
            <MudTd DataLabel="UpdatedAt">@context.UpdatedAt</MudTd>
            <MudTd DataLabel="Count">@context.Count</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[]{ 2, 10, 50, 100}" />
        </PagerContent>
    </MudTable>
}


@code {
    private List<Category>? categories;

    protected override async Task OnInitializedAsync()
    {
        categories = await _httpService.GetAll<Category>("/Category/GetAll");

        foreach (var category in categories)
        {
            category.Count = await _httpService.Count($"/Product/CountByCategory/{category.Id}");
        }
    }

    private void RowClickEvent(TableRowClickEventArgs<Category> row)
    {
        // nav to update
        _navigationManager.NavigateTo($"/admin/category/update/{row.Item.Id}");
        Console.WriteLine(row.Item.Name);
    }

}
