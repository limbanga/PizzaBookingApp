@page "/admin/category/create"
@using PizzaBookingShared.Entities
@using PizzaBookingAppClient.Shared

<PageTitle>Create category</PageTitle>

<MudText Typo="Typo.h4" GutterBottom="true"> Add Category </MudText>
<MudLink Href="/admin/category" Class="mb-2">Back to list</MudLink>

    
<EditForm Model="@category" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <MudGrid>
        <MudItem xs="12" sm="7">
            <MudCard>
                <MudCardContent>
                    
                    <MudTextField Label="Category name" HelperText="Max. 50 characters"
                    @bind-Value="category.Name" For="@(() => category.Name)" />

                    <MudTextField Label="Category icon" HelperText="Font awessome"
                    @bind-Value="category.Icon" For="@(() => category.Icon)" />
                    
                </MudCardContent>

                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Success" Class="ml-auto">Create</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>

        <MudItem xs="12" sm="5">
            <MudPaper Class="pa-4 mud-height-full">
                <MudText Typo="Typo.subtitle2">Validation Summary</MudText>
                @if (success)
                {
                    <MudText Color="Color.Success">Success</MudText>
                }
                else
                {
                    <MudText Color="@Color.Error">
                        <ValidationSummary />
                    </MudText>
                }
            </MudPaper>
        </MudItem>
        <MudItem xs="12">
            <MudText Typo="Typo.body2" Align="Align.Center">
                Fill out the form correctly to see the success message.
            </MudText>
        </MudItem>
    </MudGrid>
</EditForm>

@code {
    private Category category = new Category();
    private bool success;

    private async void OnValidSubmit(EditContext context)
    {
        success = true;
        await _httpService.Create<Category>("Category/Create", category);
        Snackbar.Add("Add category success", Severity.Success);

        StateHasChanged();
    }
}
