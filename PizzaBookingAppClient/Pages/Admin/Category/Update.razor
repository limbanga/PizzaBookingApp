@page "/admin/category/update/{id:int}"
@inject ICategoryService _categoryService
@inject NavigationManager _navigationManager
<PageTitle>Update category</PageTitle>


<div class="row">
    <div class="col-9">

        <div class="mb-3">
            <a class="btn btn-primary btn-sm" href="/admin/category">Back to list</a>
        </div>

         <div class="card">

             <div class="card-header">
                 <h1 class="card-title fs-5">Update category</h1>
             </div>

           @*   <EditForm OnValidSubmit="HandleUpdateCategory" Model="Category">
                 <DataAnnotationsValidator />

                 <div class="modal-body">
                     <div class="form-floating mb-3">
                         <InputNumber class="form-control" placeholder=" " @bind-Value="@Category.Id" readonly/>
                         <label>Category Id</label>
                         <ValidationMessage For="@(() => Category.Id)" />
                     </div>
                     <div class="form-floating mb-3">
                         <InputText class="form-control" placeholder=" " @bind-Value="@Category.Name" />
                         <label>Category name</label>
                         <ValidationMessage For="@(() => Category.Name)" />
                     </div>
                 </div>

                 <div class="card-footer text-end">
                     <button type="button" class="btn btn-danger btn-sm" data-bs-dismiss="modal">Discard</button>

                     <button type="submit"
                             class="btn btn-success btn-sm">
                         Save
                     </button>

                 </div>
             </EditForm> *@
         </div>

    </div>
</div>

@code {

    [Parameter]
    public int Id { get; set; }

    private CategoryViewModel? Category { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        //int _id = Convert.ToInt32(Id);

        Category = await _categoryService.GetAsync(Id);
        if (Category == null)
        {
            Console.WriteLine("CategoryId doesn't exist.");
            _navigationManager.NavigateTo("/admin/category");
        }
        Console.WriteLine(Id);
    }

    private async Task HandleUpdateCategory()
    {
        try
        {
            await _categoryService.UpdateAsync(Category);
            Console.WriteLine("Update category successfully");
        }
        catch (ConnectException)
        {
            Console.WriteLine("Can't connect server");
        }
    }
}

