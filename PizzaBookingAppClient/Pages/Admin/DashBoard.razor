@page "/admin"
<PageTitle>Admin - DashBoard</PageTitle>

<div class="d-flex justify-center gap-4">
    <MudSelect T="string" Label="Report by"
               Variant="Variant.Outlined"
               SelectedValuesChanged="HandleReport"
               AnchorOrigin="Origin.BottomCenter"@bind-Value="reportBy">
        <MudSelectItem T="string" Value="@("year")" />
        <MudSelectItem T="string" Value="@("month")" />
    </MudSelect>

    <MudSelect T="int" Label="Year"
               Variant="Variant.Outlined" 
               SelectedValuesChanged="HandleReport"
               AnchorOrigin="Origin.BottomCenter" @bind-Value="year">
        @foreach (var item in listYear)
        {
            <MudSelectItem T="int" Value="@item" />

        }
    </MudSelect>

    <MudSelect T="int" Label="Month"
               Disabled="@(reportBy == "year")"
               Variant="Variant.Outlined"
               AnchorOrigin="Origin.BottomCenter" @bind-Value="month"
               SelectedValuesChanged="HandleReport">
        @for (int i = 12; i > 0; i--)
        {
            <MudSelectItem T="int" Value="@i" />
        }
    </MudSelect>
</div>


<div class="d-flex justify-center">
    <MudChart 
        Style="width: 80%; margin: auto;"
        ChartType="ChartType.Bar"
        ChartSeries="@Series" 
        XAxisLabels="@XAxisLabels"
        Width="100%" />
</div>

@code {
    private string reportBy = "month";
    private int year = DateTime.Now.Year;
    private int month = DateTime.Now.Month;
    private List<int> listYear = new(3);

    public List<ChartSeries> Series = new List<ChartSeries>()
    {
        new ChartSeries() { Name = "Series 1", Data = new double[] { 90, 79, 72, 69, 62, 62, 55, 65, 70 } },
    };
    public string[] XAxisLabels = { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep" };

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        for (int i = year; i > 2020 ; i--)
        {
            listYear.Add(i);
        }

        try
        {
            await HandleReport();
            StateHasChanged();
        }
        catch (Exception)
        {
            throw;
        }
    }

    private async Task HandleReport()
    {
        Console.WriteLine($"reportBy: {reportBy}, year: {year}, month: {month}");
        if (reportBy == "year")
        {
            var listSale = await _httpService.Get<List<double>>($"/Order/ReportSale/{year}");

            Series = new List<ChartSeries>()
            {
                new ChartSeries() { Name = $"Sale in {year}", Data = listSale.ToArray() }
            };
            XAxisLabels = new string[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" };
            StateHasChanged();
        }
        else
        {
            var listSale = await _httpService.Get<List<double>>($"/Order/ReportSale/{year}/{month}");

            Series = new List<ChartSeries>()
            {
                new ChartSeries() { Name = $"Sale in {year}-{month}", Data = listSale.ToArray() }
            };

            XAxisLabels = new string[listSale.Count]; 
            for (int i = 1; i <= listSale.Count; i++)
            {
                XAxisLabels[i-1] = i.ToString();    
            }
            StateHasChanged();
        }
    }

}

