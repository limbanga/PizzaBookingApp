@inherits LayoutComponentBase

<MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode="@isDarkTheme" Theme="_currentTheme" />
<MudDialogProvider />
<MudSnackbarProvider />


<MudLayout>
    
    <MudAppBar Elevation="0">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@(() => DrawerToggle())" />
        
        <MudItem Class="d-flex" @onclick="navToHomePage">
            <MudText Typo="Typo.h4" Style="color: white;">Pixel</MudText>
            <MudText Typo="Typo.h4" Color="Color.Warning">Pizza</MudText>
        </MudItem>

        <MudSpacer />

        <MudBadge Content="3" Overlap="true" Class="mx-6 my-4" Color="@(isDarkTheme? Color.Error: Color.Dark)">
            <MudIcon
                Icon="@Icons.Material.Filled.ShoppingCart" 
                Color="Color.Primary"
                @onclick="ToggleCartDrawer" />
        </MudBadge>

        <MudTooltip Text="@(isDarkTheme ? "Change to light": "Change to dark")">
            <MudToggleIconButton
                @bind-Toggled="@isDarkTheme"
                Size="Size.Medium"
                Icon="@Icons.Material.Filled.WbSunny" Color="@Color.Warning" Title="Off"
                ToggledIcon="@Icons.Material.Filled.DarkMode" ToggledColor="@Color.Info" ToggledTitle="On" />
        </MudTooltip>



        <AuthorizeView>
            <Authorized>
                <MudAvatar @onclick="ToggleAccountDrawer"
                           Class="px-4"
                           Color="Color.Tertiary"
                           Size="Size.Medium">U</MudAvatar>
            </Authorized>
            <NotAuthorized>
                <MudIconButton 
                    OnClick="@(()=> _navigationManager.NavigateTo("/login"))"
                    Icon="@Icons.Material.Filled.Login"
                    Color="Color.Primary"/>
            </NotAuthorized>

        </AuthorizeView>

    </MudAppBar>

    @* Account Drawer *@
    <MudDrawer @bind-Open="_drawerOpenAccount" Elevation="1" 
                Anchor="Anchor.End" Variant="@DrawerVariant.Temporary" 
                Width="300px"
                Class="mx-4"
                Style="background: var(--mud-palette-background);">

        <MudDrawerHeader>
            <MudText Typo="Typo.h6" Color="Color.Primary">Hi Last Name</MudText>
        </MudDrawerHeader>

        <MudButton 
            OnClick="LogoutAsync"
            Color="Color.Primary" 
            Variant="Variant.Outlined">
            Logut
        </MudButton>

    </MudDrawer>

    @* Category Drawer *@
    <MudDrawer @bind-Open="_drawerOpen" Elevation="1" Variant="@DrawerVariant.Temporary" Width="300px">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">Category</MudText>
        </MudDrawerHeader>
        <NavCategoryMenu />
    </MudDrawer>

    @* Cart Drawer *@
    <MudDrawer @bind-Open="@_drawerOpenCart" Anchor="Anchor.End" Elevation="100" Variant="@DrawerVariant.Temporary" Width="500px"
               Style="background: var(--mud-palette-background);">

        <MudDrawerHeader>
            <MudText Typo="Typo.h5" Color="Color.Primary">Your cart</MudText>
        </MudDrawerHeader>

        <div class="d-flex justify-end">
            <MudButton
                Class="me-8"
                Variant="Variant.Outlined"
                StartIcon="@Icons.Material.Filled.Payments"
                Color="Color.Warning"
                OnClick="navToCheckOutPage">
                Check out now!
            </MudButton>
        </div>

        <CartList OrderLines="orderLines" LoadCart="LoadCart" />
    </MudDrawer>

    @* Body *@
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Fixed="true" >
            @Body
        </MudContainer>
    </MudMainContent>

    @* Floating Action Button cart *@
    <div style="z-index: 2000; position: fixed; right: 35px; top: 40vh;"
         class=" @(_drawerOpenCart? "invisible": "visible")">
        <MudBadge Content="3" Overlap="true">
            <MudFab Color="Color.Tertiary"
                    StartIcon="@Icons.Material.Filled.ShoppingCart"
                    OnClick="ToggleCartDrawer" />
        </MudBadge>
    </div>


</MudLayout>

@code {

    private async Task LogoutAsync()
    {
        await _authService.LogoutAsync();
        _snackbar.Add("Loged out successfullt", Severity.Success);
        _drawerOpenAccount = false;
    }

    private bool _drawerOpenAccount = false;
    private void ToggleAccountDrawer()
    {
        _drawerOpenAccount = !_drawerOpenAccount;
    }

    private bool _drawerOpenCart = false;
    private List<OrderLine> orderLines { get; set; } = null!;

    private async Task ToggleCartDrawer()
    {
        _drawerOpenCart = !_drawerOpenCart;
        await LoadCart();
    }

    private async Task LoadCart()
    {
        orderLines = await _cartService.Get();
        foreach (var orderLine in orderLines)
        {
            if (orderLine.ProductId != null)
            {
                orderLine.Product =
                    await _httpService.Get<Product>("/Product/Get", (int)orderLine.ProductId);
            }
        }
    }

    private bool _drawerOpen = false;

    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private bool isDarkTheme { get; set; } = true;

    private MudThemeProvider _mudThemeProvider = null!;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            isDarkTheme = await _mudThemeProvider.GetSystemPreference();
            StateHasChanged();
        }
    }

    private readonly MudTheme _currentTheme = new()
        {
            Palette = new Palette
            {
                Primary = "#000000",
                Secondary = "#ffffff",
                Info = "#64a7e2",
                Success = "#2ECC40",
                Warning = "#FFC107",
                AppbarBackground = "#ff0000",
                Background = "#ffffff"

            },
            PaletteDark = new Palette
            {
                Primary = "#ffffff",
                Secondary = "#000000",
                Info = "#a4c2dd",
                Success = "#2ECC40",
                Warning = "#fff000",
                AppbarBackground = "#121212",
                Background = "#161616",
                TextSecondary = "#adff2f",
            }
    };


    private void ThemeToggle()
    {
        isDarkTheme = !isDarkTheme;
        StateHasChanged();
    }

    private void navToHomePage()
    {
        _navigationManager.NavigateTo("/");
    }

    private void navToCheckOutPage()
    {
        _navigationManager.NavigateTo("/checkout");
    }
}