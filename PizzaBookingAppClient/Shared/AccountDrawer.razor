<MudDrawer @bind-Open="MainLayout._drawerOpenAccount" Elevation="1"
           Anchor="Anchor.End" Variant="@DrawerVariant.Temporary"
           Width="300px"
           Class="pa-4"
           Style="background: var(--mud-palette-background);">

    <MudDrawerHeader>
        <MudText Typo="Typo.h6" Color="Color.Primary">Hi @role</MudText>
    </MudDrawerHeader>

    <MudNavMenu Color="Color.Tertiary" Bordered=true>

        <MudNavLink Href="/account/wish-list"
                    Match="NavLinkMatch.All"
                    IconColor="Color.Error"
                    Icon="@Icons.Material.Filled.Favorite">Wish list</MudNavLink>

        <MudNavLink Href="/account"
                    Match="NavLinkMatch.All"
                    IconColor="Color.Tertiary"
                    Icon="@Icons.Material.Filled.Person">Your infor</MudNavLink>

        <MudNavLink Href="/account/change-password"
                    Match="NavLinkMatch.All"
                    Icon="@Icons.Material.Filled.LockReset">Change password</MudNavLink>


    </MudNavMenu>


    <MudSpacer />

    <MudButton OnClick="LogoutAsync"
               Color="Color.Primary"
               Variant="Variant.Outlined">
        Logout
    </MudButton>   

</MudDrawer>
@code {
    [CascadingParameter]
    public MainLayout MainLayout { get; set; } = null!;
    private string role = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        role = await _authService.GetClaimValue("lastName");
        await base.OnInitializedAsync();
    }

    private async Task LogoutAsync()
    {
        await _authService.LogoutAsync();
        _snackbar.Add("Loged out successfullt", Severity.Success);
        MainLayout._drawerOpenAccount = false;
    }
}
